// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户表
model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  password    String
  nickname    String?
  avatar      String?
  phone       String?
  targetUniversityId String?
  targetMajor String?
  examDate    DateTime?
  role        String    @default("user") // 用户角色: user, admin
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联关系
  // targetUniversity University? @relation("TargetUniversity", fields: [targetUniversityId], references: [id])
  groups      GroupMember[]
  checkIns    CheckIn[]
  tasks       Task[]
  messages    Message[]
  sentReminders Reminder[] @relation("SentReminders")
  receivedReminders Reminder[] @relation("ReceivedReminders")

  @@map("users")
}

// 院校表
model University {
  id          String   @id @default(cuid())
  name        String   @unique
  shortName   String?  // 院校简称
  logoUrl     String?
  location    String?
  type        String?  // 985, 211, 双一流等
  level       String?  // 院校级别：985, 211, regular
  description String?  // 院校描述
  website     String?  // 官网地址
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联关系
  // targetedBy  User[]   @relation("TargetUniversity")

  @@map("universities")
}

// 小组表
model Group {
  id          String   @id @default(cuid())
  name        String
  description String?
  inviteCode  String   @unique
  maxMembers  Int      @default(20)
  isPublic    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String

  // 关联关系
  members     GroupMember[]
  messages    Message[]
  tasks       Task[]
  checkIns    CheckIn[]

  @@map("groups")
}

// 小组成员关系表
model GroupMember {
  id        String   @id @default(cuid())
  userId    String
  groupId   String
  role      String   @default("member") // admin, member
  joinedAt  DateTime @default(now())

  // 关联关系
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@unique([groupId, userId], name: "groupId_userId")
  @@map("group_members")
}

// 打卡记录表
model CheckIn {
  id          String   @id @default(cuid())
  userId      String
  groupId     String?
  type        String   // start, progress, end
  content     String?
  mood        String?
  studyHours  Float?
  location    String?  // 学习地点
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 关联关系
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  group       Group?   @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@map("check_ins")
}

// 任务表
model Task {
  id                String    @id @default(cuid())
  userId            String
  groupId           String?
  title             String
  description       String?
  category          String?
  estimatedDuration Int?      // 预估时长（分钟）
  difficulty        String?   // easy, medium, hard
  priority          Int       @default(3) // 1-5
  status            String    @default("pending") // pending, in_progress, completed, cancelled
  isCompleted       Boolean   @default(false)
  isGenerated       Boolean   @default(false) // 是否为智能生成
  dueDate           DateTime?
  completedAt       DateTime?
  
  // 重新设计的任务管理字段
  taskType          String?   @default("count") // 任务类型: count, duration, progress
  taskCategory      String?   // 学习类别: vocabulary, exercise, reading, review, other
  
  // 计数型任务字段 (记单词、做题等)
  targetCount       Int?      // 目标总数 (如2000个单词)
  currentCount      Int?      @default(0) // 当前完成数 (如300个单词)
  dailyTarget       Int?      // 每日目标数 (如50个单词)
  unit              String?   // 单位 (个、套、章等)
  
  // 时长型任务字段 (看视频、复习等)
  targetDuration    Int?      // 目标总时长(分钟)
  currentDuration   Int?      @default(0) // 当前累计时长(分钟)
  dailyDuration     Int?      // 每日目标时长(分钟)
  
  // 进度型任务字段 (复习章节等)
  progress          Int?      @default(0) // 0-100的进度百分比
  totalDays         Int?      @default(15) // 计划天数
  
  // 任务权重 (用于计算总完成率)
  weight            Int?      @default(5) // 1-10，默认5
  
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // 关联关系
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  group             Group?    @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

// 消息表
model Message {
  id        String   @id @default(cuid())
  senderId  String
  groupId   String
  content   String
  type      String   @default("text") // text, image, file
  createdAt DateTime @default(now())

  // 关联关系
  sender    User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
  group     Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@map("messages")
}

// 提醒表
model Reminder {
  id          String   @id @default(cuid())
  senderId    String
  receiverId  String
  groupId     String
  message     String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())

  // 关联关系
  sender      User     @relation("SentReminders", fields: [senderId], references: [id], onDelete: Cascade)
  receiver    User     @relation("ReceivedReminders", fields: [receiverId], references: [id], onDelete: Cascade)

  @@map("reminders")
}

// 系统配置表
model SystemConfig {
  id    String @id @default(cuid())
  key   String @unique
  value String
  description String?

  @@map("system_configs")
} 